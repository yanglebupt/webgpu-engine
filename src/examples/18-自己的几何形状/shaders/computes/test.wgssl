Input {
  @builtin(global_invocation_id) id: vec3u
}

Resources {
  struct UniformData {
    li:f32,
  };
  @group(0) @binding(0) var<uniform> uni: UniformData;
  @group(0) @binding(1) var tex: texture_2d<f32>;
}

@compute
Entry {
  let pixel = id.wh;
  var col = textureLoad(inputTexture, pixel, 0u);
  let col2 = textureLoad(tex, pixel, 0u);  // 这里的 pixel 和 tex 的 pixel 不一定匹配
  col *= col2;
  // col += col2;
  textureStore(outputTexture, pixel, vec4f(pow(col.rgb, vec3f(uni.li)), col.a));
}
